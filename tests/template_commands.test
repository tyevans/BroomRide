# templates.test
set auto_path [linsert $auto_path 0 "[pwd]/../src/"]

package require tcltest
package require broomride 1.0 

namespace import ::tcltest::*
namespace import ::broomride::templates::*

test template_simple_for_each {
	Test: Repeat static text with foreach 
} -body {
	set context [dict create foo [list 1 2 3]]
	Template tmpl "{% foreach i in foo %}FOO{% endfor %}"
	set result [tmpl render $context]
	itcl::delete object tmpl
	return $result
} -result "FOOFOOFOO"


test template_using_loop_variable {
	Test: Repeat static text with foreach 
} -body {
	set context [dict create foo [list 1 2 3]]
	Template tmpl "{% foreach i in foo %}{{i}}{% endfor %}"
	set result [tmpl render $context]
	itcl::delete object tmpl
	return $result
} -result "123"


test template_simple_if_statement_false {
	Test: Repeat static text with foreach 
} -body {
	set context [dict create]
	Template tmpl "{% if 0 %}FOO{% endif %}"
	set result [tmpl render $context]
	itcl::delete object tmpl
	return $result
} -result ""

test template_simple_if_statement_true {
	Test: Repeat static text with foreach 
} -body {
	set context [dict create]
	Template tmpl "{% if 1 %}FOO{% endif %}"
	set result [tmpl render $context]
	itcl::delete object tmpl
	return $result
} -result "FOO"

test template_nested_foreach {
	Test: Repeat static text with foreach 
} -body {
	set context [dict create foo [list [list 1 2 3] [list 1 2 3]]]
	Template tmpl "{%foreach i in foo%}{%foreach j in i %}{{j}}{%endfor%}{%endfor%}"
	set result [tmpl render $context]
	itcl::delete object tmpl
	return $result
} -result "123123"

test template_foreach_nested_if {
	Test: Repeat static text with foreach 
} -body {
	set context [dict create foo [list [list 1 2 3] [list 1 2 3]]]
	Template tmpl "{%foreach i in foo%}{%if $i==1 %}{{j}}{%endif%}{%endfor%}"
	set result [tmpl render $context]
	itcl::delete object tmpl
	return $result
} -result "123123"


cleanupTests